name: Reusable Create Release

on:
  workflow_call:
    inputs:
      tag:
        description: "The full GitHub ref (e.g., refs/tags/validator_node@1.2.3)"
        required: true
        type: string
      
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: üõé Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Extract Crate Name & Version
        id: extract_info
        run: |
          TAG_NAME="${{ inputs.tag }}"
          TAG_NAME=$(echo "$TAG_NAME" | sed 's|refs/tags/||')
          CRATE_NAME=$(echo "$TAG_NAME" | cut -d'@' -f1)
          VERSION=$(echo "$TAG_NAME" | cut -d'@' -f2)
          
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "CRATE_NAME=$CRATE_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: üîç Get Previous Version Tag
        id: get_previous_version
        run: |
          PREV_TAG=$(git tag --sort=-v:refname | grep "${{ env.CRATE_NAME }}@" | grep -v -F "$TAG_NAME" | head -n 1 || echo "N/A")
          echo "PREV_VERSION=${PREV_TAG#${{ env.CRATE_NAME }}@}" >> $GITHUB_ENV
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          body: |
            [${{ env.VERSION }}](https://github.com/originalworks/protocol-core/compare/${{ env.PREV_TAG }}...${{ env.TAG_NAME }}) (${{ env.DATE }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug
        run: |
          if [[ -z "$SENTRY_ORG" ]]; then
            echo "‚ùå SENTRY_ORG is not set!"
          else
            echo "‚úÖ SENTRY_ORG is set!"
          fi
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ env.CRATE_NAME }}
        with:
          release: ${{ env.VERSION }}
          release_prefix: "@"