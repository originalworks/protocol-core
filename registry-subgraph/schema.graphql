type HealthStatus @entity(immutable: false) {
  id: String!
  txAmount: BigInt!
  owenTxAmount: BigInt!
  validatorTxAmount: BigInt!
  blobsInQueueAmount: BigInt!
  batchTimestamp: BigInt
  batchTxHash: Bytes
  validationTimestamp: BigInt
  validationTxHash: Bytes
}

type ValidatorTxPerDay @entity(immutable: false) {
  id: String! # date
  month: String!
  day: String!
  year: String!
  amount: BigInt!
}

type ValidatorTxPerMonth @entity(immutable: false) {
  id: String! # date
  month: String!
  year: String!
  amount: BigInt!
}

type BlobsStatus @entity(immutable: false) {
  id: String! # status
  amount: BigInt!
  latestEventTimestamp: BigInt
  latestEventTxHash: Bytes
}

type BlobsSubmittedPerDay @entity(immutable: false) {
  id: String! # date
  month: String!
  day: String!
  year: String!
  amount: BigInt!
}

type BlobsSubmittedPerMonth @entity(immutable: false) {
  id: String! # date
  month: String!
  year: String!
  amount: BigInt!
}

type BlobsProcessedPerDay @entity(immutable: false) {
  id: String! # date
  month: String!
  day: String!
  year: String!
  amount: BigInt!
}

type BlobsProcessedPerMonth @entity(immutable: false) {
  id: String! # date
  month: String!
  year: String!
  amount: BigInt!
}

type BlobsRejectedPerDay @entity(immutable: false) {
  id: String! # date
  month: String!
  day: String!
  year: String!
  amount: BigInt!
}

type BlobsRejectedPerMonth @entity(immutable: false) {
  id: String! # date
  month: String!
  year: String!
  amount: BigInt!
}

type MessagesProcessedPerDay @entity(immutable: false) {
  id: String! # date
  month: String!
  day: String!
  year: String!
  amount: BigInt!
}

type ProvedMessage @entity(immutable: false) {
  id: ID!
  message_id: String!
  timestamp: BigInt!
  validator: Bytes!
}

type AssetMetadata @entity(immutable: true) {
  id: ID!
  rawContent: String!
  blobMetadata: BlobMetadata
  release: Release
  partyList: [PartyElement!]
}

type BlobMetadata @entity(immutable: true) {
  id: ID!
  versioned_hash: String
  transaction_hash: String
  block_number: String
  timestamp: String
  chain_id: String
  network_name: String
  blob_ipfs_cid: String
}

type Release @entity(immutable: true) {
  id: ID!
  title_text: String
  subtitle: String
  display_title_text: String
  release_reference: String
  release_types: [String!]
  release_label_references: [String!]
  genres: [String!]
  display_artists: [DisplayArtist!]
  display_artist_names: [DisplayArtistName!]
  grid: String
  icpn: String
  proprietary_ids: [String!]
}

type DisplayArtist @entity(immutable: true) {
  id: ID!
  artist_party_reference: String
  sequence_number: BigInt
  display_artist_roles: [String!]
}

type DisplayArtistName @entity(immutable: true) {
  id: ID!
  applicable_territory_code: String
  language_and_script_type: String
  display_artist_name: String
}

type PartyElement @entity(immutable: true) {
  id: ID!
  party_reference: String
  party_name: String
}
