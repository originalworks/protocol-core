AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ValidatorLogGroupName:
    Type: String
  ValidatorSecretsName:
    Type: String

Resources:
  ValidatorSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref ValidatorSecretsName
      Description: "Environmental variables with sensitive data for Validator"
      # !!! Set those manually in your AWS Console after the deployment!!!
      # !!! Do not edit this line here directly !!!
      SecretString: '{"RPC_URL": "your-rpc-url", "PRIVATE_KEY": "your-private-key", "WS_URL": "your-ws-url", "BEACON_RPC_URL": "your-beacon-rpc-url" }'

  ValidatorEc2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: g4dn.xlarge
      ImageId: ami-084568db4383264d4
      SubnetId: !Ref ValidatorSubnet
      KeyName: validator-ec2
      IamInstanceProfile: !Ref ValidatorInstanceProfile
      AvailabilityZone: us-east-1a
      Tags:
        - Key: ValidatorTag
          Value: ValidatorNodeEc2
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 100
            VolumeType: gp3
            DeleteOnTermination: true
      SecurityGroupIds:
        - !Ref ValidatorSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          mkdir workspace
          cd workspace

          git clone https://github.com/originalworks/protocol-core.git >> /var/log/instance-config.log 2>&1

          cd protocol-core/aws/validator-infra/instance-config

          ./cloudwatch/run.sh >> /var/log/instance-config.log 2>&1
          ./install-nvidia-driver.sh >> /var/log/instance-config.log 2>&1
          ./install-docker.sh >> /var/log/instance-config.log 2>&1
          ./install-nvidia-container-toolkit.sh >> /var/log/instance-config.log 2>&1
          ./install-awscli.sh >> /var/log/instance-config.log 2>&1
          snap enable amazon-ssm-agent >> /var/log/instance-config.log 2>&1
          echo "---Preconfig finished---" >> /var/log/instance-config.log

          cd ..
          ./rebuild.sh >> /var/log/rebuild.log 2>&1

          ./run-validator

  ValidatorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH and outbound internet access"
      VpcId: !Ref ValidatorVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ValidatorVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"

  ValidatorInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ValidatorRole

  ValidatorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ["ec2.amazonaws.com"]
            Action: ["sts:AssumeRole"]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: ValidatorPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ValidatorSecretsName}-*
              - Effect: Allow
                Action:
                  - "ec2-instance-connect:SendSSHPublicKey"
                Resource: "*"

  ValidatorSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref ValidatorVPC
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: true

  ValidatorInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ValidatorVPC
      InternetGatewayId: !Ref ValidatorInternetGateway

  ValidatorRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ValidatorVPC

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ValidatorRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref ValidatorInternetGateway

  ValidatorRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ValidatorSubnet
      RouteTableId: !Ref ValidatorRouteTable

  ValidatorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref ValidatorLogGroupName
      RetentionInDays: 14
